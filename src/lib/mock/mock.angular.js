// Generated by CoffeeScript 1.7.1
(function() {
  (function() {
    return Mock.mockjax = function(module) {
      var Item, error;
      Item = (function() {
        function Item() {}

        Item.prototype.add = function(url, params) {
          var k, reg, v, _ref;
          _ref = Mock._mocked;
          for (k in _ref) {
            v = _ref[k];
            reg = null;
            if (/^\/.*\/$/.test(v.rurl)) {
              reg = eval(v.rurl);
            } else {
              reg = new RegExp(v.rurl);
            }
            if (reg.test(url) && (!v.rtype||v.rtype==params.command)) {
              return Mock.mock(v.template);
            }
          }
        };

        return Item;

      })();
      try {
        return module.config(function($httpProvider) {
          var item;
          item = new Item();
          return $httpProvider.interceptors.push(function() {
            return {
              request: function(config) {
                var result;
                var data;
                switch(config.method.toLowerCase()){
                  case 'post':
                    data = config.data; break;
                  case 'get':
                    data = config.params; break;
                  default:
                    data = config.data; break;
                }
                result = item.add(config.url, data);
                if (result) {
                  config.original = {
                    url: config.url,
                    result: result,
                    method: config.method,
                    params: config.params,
                    data: config.data
                  };
                  config.method = "GET";
                  config.url = "?mockUrl=" + config.url;
                }
                return config;
              },
              response: function(response) {
                var original;
                original = response.config.original;
                if (original) {
                  response.data = original.result;
                  console.log(original);
                }
                return response;
              }
            };
          });
        });
      } catch (_error) {
        error = _error;
        return console.error('生成mock.angular失败，例：var app = angular.module("app", []); Mock.mockjax(app);');
      }
    };
  })();

}).call(this);
